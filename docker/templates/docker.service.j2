[Unit]
Description=Docker Application Container Engine
Documentation=http://docs.docker.com
After=network.target rhel-push-plugin.socket registries.service
Wants=docker-storage-setup.service
Requires=docker-cleanup.timer {%- if docker_use_flannel_network %} flannel.service {% endif %}


[Service]
Type=notify
NotifyAccess=all
EnvironmentFile=-/run/containers/registries.conf
EnvironmentFile=-/etc/sysconfig/docker
EnvironmentFile=-/etc/sysconfig/docker-storage
{% if docker_use_flannel_network %}
EnvironmentFile=/run/flannel/{{ flannel_service_name }}.env
{% else %}
EnvironmentFile=-/etc/sysconfig/docker-network
{% endif %}
Environment=GOTRACEBACK=crash
Environment=DOCKER_HTTP_HOST_COMPAT=1
Environment=PATH=/usr/libexec/docker:/usr/bin:/usr/sbin
ExecStart=/usr/bin/dockerd-current \
          --add-runtime docker-runc=/usr/libexec/docker/docker-runc-current \
          --default-runtime=docker-runc \
          --exec-opt native.cgroupdriver=systemd \
          --userland-proxy-path=/usr/libexec/docker/docker-proxy-current \
          --init-path=/usr/libexec/docker/docker-init-current \
          --seccomp-profile=/etc/docker/seccomp.json \
          --config-file /etc/docker/daemon.json \
{% if docker_use_flannel_network %}
          --bip=${FLANNEL_SUBNET} --mtu=${FLANNEL_MTU} \
{% else %}
          --bip={{ docker_bip }} --mtu={{ docker_mtu }} --ipmasq={{ docker_ipmasq }} \
{% endif %}
          $OPTIONS

ExecReload=/bin/kill -s HUP $MAINPID
LimitNOFILE=1048576
LimitNPROC=1048576
LimitCORE=infinity
TimeoutStartSec=0
Restart=on-abnormal
KillMode=process

[Install]
WantedBy=multi-user.target
