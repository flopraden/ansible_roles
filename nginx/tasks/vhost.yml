---

# vhost tasks for nginx

- name: nginx | vhost | create configuration for {{ item.name }}
  template:
    # I apologise
    src: "{{  item.template | default('vhost/%s.conf.j2' | format('reverse_proxy' if item.get('upstream_group',item.get('upstream_hosts',false)) else 'static')) }}"
    dest: "/etc/nginx/sites-available/{{ item.name }}.conf"
    owner: root
    group: nginx
    mode: "0640"
  notify:
    - nginx | service | reload

- name: nginx | vhost | create default ssl directory for {{ item.name }}
  file:
    name: "/etc/nginx/ssl/{{ item.hostname | default(item.name) }}/"
    state: directory
    owner: root
    group: nginx
    mode: "0750"

- name: nginx | vhost | create self-signed certificates for {{ item.name }}
  import_role:
    name: cfssl
  vars:
    cfssl_components:
      - cfssl
      - cfssljson
      - mkbundle
    cfssl_requests:
      - name: "nginx-{{ item.name }}"
        content:
          CN: "{{ item.hostname | default(item.name) }}"
          hosts: "{{ [item.hostname | default(item.name)] + item.additional_hostnames | default([]) }}"
        profile: server
        arguments: "{{ item.hostname | default(item.name) }}"
        action: selfsign
        owner: root
        group: nginx
  when: not item.certificate | default(false, true)

- name: nginx | vhost | set rights on ssl key and chain
  copy:
    src: "/etc/cfssl/cert.d/nginx-{{ item.hostname | default(item.name) }}/{{ filename.src }}.pem"
    dest: "/etc/nginx/ssl/{{ item.hostname | default(item.name) }}/{{ filename.dest | default(filename.src) }}.pem"
    owner: root
    group: nginx
    remote_src: true
    mode: "0600"
  loop_control:
    loop_var: filename
  with_items:
    - src: cert-key
      dest: privkey
    - src: cert
      dest: fullchain
  when: not item.certificate | default(false, true)

- name: nginx | vhost | create letsencrypt directory for {{ item.name }}
  file:
    name: "{{ item }}"
    state: directory
    owner: certbot
    group: nginx
    mode: "01750"
  with_items:
    - /usr/share/nginx/letsencrypt
    - "/usr/share/nginx/letsencrypt/{{ item.name }}"
  when: item.use_letsencrypt | default(false, true)

- name: nginx | vhost | enable {{ item.name }}
  file:
    src: "/etc/nginx/sites-available/{{ item.name }}.conf"
    dest: "/etc/nginx/sites-enabled/{{ item.name }}.conf"
    state: link
  notify:
    - nginx | service | reload
